
%just have to put the name of the old MR for all of them
% METHODS(1).EVAL.preMR='MRB1';
% METHODS(1).type='B1';
% METHODS(1).MRtype='b1espirit';
% METHODS(1).ACCF=[];
% METHODS(1).AC=[];

METHODS(1).EVAL.preMR='MRB1B';
METHODS(1).type='B1 Bart';
METHODS(1).MRtype='b1bartespirit';
METHODS(1).ACCF=[];
METHODS(1).AC=[];

METHODS(2).EVAL.preMR='MRR';
METHODS(2).type='BART SOS';
METHODS(2).MRtype='rssbart';
METHODS(2).ACCF=[];
METHODS(2).AC=[];

% METHODS(4).EVAL.preMR='MRRSS0';
% METHODS(4).type='RSS no noisecov (regular)';
% METHODS(4).MRtype='rss';
% METHODS(4).ACCF=[];
% METHODS(4).AC=[];

REALACC=[1 1.6 2.29];

for acc=1:numel(ACC)
clear o;
name=['MRS' num2str(ACC(acc))] ;    
o.EVAL.preMR=name;
o.type=['mSENSE ACC:' num2str(REALACC(acc)) ' ACL: ' num2str(AC)];
o.MRtype='msensebartsense';
o.ACCF=ACC(acc);
o.AC=AC;

METHODS=cat(2,METHODS,o);


clear o;
name=['MRE' num2str(ACC(acc))] ;    
o.EVAL.preMR=name;
o.type=['ESPIRiT ACC:' num2str(REALACC(acc)) ' ACL: ' num2str(AC)];
o.MRtype='espirits';
o.ACCF=ACC(acc);
o.AC=AC;

METHODS=cat(2,METHODS,o);
end

%name of the SNR methods
mDI='DI';
m2R='twoROIS';
mMR='MR';
mACM='AC';
mFA='FAST';

mPMR50='PMR50';

mPMR100='PMR100';

mPMR150='PMR150';

mPMR1000='PMR1000';


for t=1:numel(METHODS)
oMR=METHODS(t).EVAL.preMR(3:end);
METHODS(t).EVAL.RECON=['IM' oMR];

METHODS(t).EVAL.SNRVALUES.DI=[mDI 'SNRVALUES' oMR];

METHODS(t).EVAL.SNRVALUES.tworois=[m2R 'SNRVALUES' oMR];


METHODS(t).EVAL.SNRMAPS.MR=[mMR 'SNRMAPS' oMR];
METHODS(t).EVAL.SNRVALUES.MR=[mMR  'SNRVALUES' oMR];


METHODS(t).EVAL.SNRMAPS.fast1=[mFA 'SNRMAPS' oMR];
METHODS(t).EVAL.SNRVALUES.fast1=[mFA 'SNRVALUES' oMR];

METHODS(t).EVAL.SNRMAPS.fast5=[mFA 'SNRMAPS5' oMR];
METHODS(t).EVAL.SNRVALUES.fast5=[mFA 'SNRVALUES5' oMR];

METHODS(t).EVAL.SNRMAPS.fast20=[mFA 'SNRMAPS20' oMR];
METHODS(t).EVAL.SNRVALUES.fast20=[mFA 'SNRVALUES20' oMR];

METHODS(t).EVAL.SNRMAPS.fastFINAL=[ mFA 'SNRMAPSFINAL' oMR];
METHODS(t).EVAL.SNRVALUES.fastFINAL=[mFA 'SNRVALUESFINAL' oMR];


METHODS(t).EVAL.SNRMAPS.acm=[mACM 'SNRMAPS' oMR];
METHODS(t).EVAL.SNRVALUES.acm=[mACM 'SNRVALUES' oMR];


METHODS(t).EVAL.SNRMAPS.pm50=[mPMR50 'SNRMAPS' oMR];
METHODS(t).EVAL.SNRVALUES.pmr50=[mPMR50 'SNRVALUES' oMR];

METHODS(t).EVAL.SNRMAPS.pm100=[mPMR100 'SNRMAPS' oMR];
METHODS(t).EVAL.SNRVALUES.pmr100=[mPMR100 'SNRVALUES' oMR];

METHODS(t).EVAL.SNRMAPS.pm150=[mPMR150 'SNRMAPS' oMR];
METHODS(t).EVAL.SNRVALUES.pmr150=[mPMR150 'SNRVALUES' oMR];

METHODS(t).EVAL.SNRMAPS.pm1000=[mPMR1000 'SNRMAPS' oMR];
METHODS(t).EVAL.SNRVALUES.pmr1000=[mPMR1000 'SNRVALUES' oMR];

end




for t=1:numel(METHODS)
oMR=METHODS(t).EVAL.preMR(3:end);
METHODS(t).EVAL.RECON=['IM' oMR];

METHODS(t).MOVING.SNRVALUES.DI=['moving' mDI 'SNRVALUES' oMR];

METHODS(t).MOVING.SNRVALUES.tworois=['moving' m2R 'SNRVALUES' oMR];


METHODS(t).MOVING.SNRMAPS.MR=['moving' mMR 'SNRMAPS' oMR];
METHODS(t).MOVING.SNRVALUES.MR=['moving' mMR  'SNRVALUES' oMR];


METHODS(t).MOVING.SNRMAPS.fast1=['moving' mFA 'SNRMAPS' oMR];
METHODS(t).MOVING.SNRVALUES.fast1=['moving' mFA 'SNRVALUES' oMR];

METHODS(t).MOVING.SNRMAPS.fast5=['moving' mFA 'SNRMAPS5' oMR];
METHODS(t).MOVING.SNRVALUES.fast5=['moving' mFA 'SNRVALUES5' oMR];

METHODS(t).MOVING.SNRMAPS.fast20=['moving' mFA 'SNRMAPS20' oMR];
METHODS(t).MOVING.SNRVALUES.fast20=['moving' mFA 'SNRVALUES20' oMR];

METHODS(t).MOVING.SNRMAPS.fastFINAL=['moving' mFA 'SNRMAPSFINAL' oMR];
METHODS(t).MOVING.SNRVALUES.fastFINAL=['moving' mFA 'SNRVALUESFINAL' oMR];

METHODS(t).MOVING.SNRMAPS.acm=['moving' mACM 'SNRMAPS' oMR];
METHODS(t).MOVING.SNRVALUES.acm=['moving' mACM 'SNRVALUES' oMR];


METHODS(t).MOVING.SNRMAPS.pm50=['moving' mPMR50 'SNRMAPS' oMR];
METHODS(t).MOVING.SNRVALUES.pmr50=['moving' mPMR50 'SNRVALUES' oMR];

METHODS(t).MOVING.SNRMAPS.pm100=['moving' mPMR100 'SNRMAPS' oMR];
METHODS(t).MOVING.SNRVALUES.pmr100=['moving' mPMR100 'SNRVALUES' oMR];

METHODS(t).MOVING.SNRMAPS.pm150=['moving' mPMR150 'SNRMAPS' oMR];
METHODS(t).MOVING.SNRVALUES.pmr150=['moving' mPMR150 'SNRVALUES' oMR];

METHODS(t).MOVING.SNRMAPS.pm1000=['moving' mPMR1000 'SNRMAPS' oMR];
METHODS(t).MOVING.SNRVALUES.pmr1000=['moving' mPMR1000 'SNRVALUES' oMR];

end

clear t
clear ans acc o name oMR
%% roi definition
MASK=zeros(96,96,5);
MASK(48-16+1:48+16,48-16+1:48+16,:)=1;
roiin=find(MASK);

MASK=zeros(96,96,5);
        MASK(1:1+15,1:1+15,:)=1;
        MASK(1:1+15,end-15:end,:)=1;
        MASK(end-15:end,1:1+15,:)=1;
        MASK(end-15:end,end-15:end,:)=1;
roiout=find(MASK);
